<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>java on Yogendra Rampuria</title><link>https://yogendra.github.io/tags/java/</link><description>Recent content in java on Yogendra Rampuria</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Copyright © 2012–2021, Yogendra Rampuria; all rights reserved.</copyright><lastBuildDate>Fri, 10 Jan 2014 10:09:46 +0000</lastBuildDate><atom:link href="https://yogendra.github.io/tags/java/index.xml" rel="self" type="application/rss+xml"/><item><title>JDK - No Install Needed</title><link>https://yogendra.github.io/2014/01/10/jdk-no-install-needed/</link><pubDate>Fri, 10 Jan 2014 10:09:46 +0000</pubDate><guid>https://yogendra.github.io/2014/01/10/jdk-no-install-needed/</guid><description>
&lt;p>I don&amp;rsquo;t like the whole concept of installers for my development tools like JDK, Eclipse, Netbeans, etc. I just keep a batch/shell script to setup my environment variables for JAVA_HOME, PATH and aliases.&lt;/p>
&lt;p>So, on Windows, updating JDK involves installing new version of JDK and then copying what I need and then uninstall it. I don&amp;rsquo;t like those registry entries and files installed in C:\Windows\System32, etc.&lt;/p>
&lt;p>Recently I read a &lt;a href="https://stackoverflow.com/questions/1619662/where-can-i-get-the-latest-jre-jdk-as-a-zip-file-i-mean-no-exe-installer">stackoverflow entry&lt;/a> that gave some insight on JDK packaging. So I wrote a small batch script to do it all. Only quirk is that, there is a small difference in Pre 7.0 packaging from the 7.0 and above, so for now I need to keep 2 scripts. Scripts need 7z, that is a free tool and could be downloaded from &lt;a href="https://www.7-zip.org/download.html">here&lt;/a>.&lt;/p>
&lt;p>These scripts can be run as:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-shell" data-lang="shell">jdk-extract path_to_install.exe&amp;lt;/pre&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;em>or&lt;/em>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-shell" data-lang="shell">jdk-extract-pre-7.0.bat path_to_installer.bat
&lt;/code>&lt;/pre>&lt;/div>&lt;p>And now on to the actual the code:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-shell" data-lang="shell">@echo off
REM This script will extract JDK tools from installers, without polluting Windows environment.
REM You need the pristine installers from Oracles website to extract all the data
setlocal
SET CWD&lt;span style="color:#f92672">=&lt;/span>%CD%
SET FILE&lt;span style="color:#f92672">=&lt;/span>%~f1
SET DEST&lt;span style="color:#f92672">=&lt;/span>%~dpn1
echo DEST&lt;span style="color:#f92672">=&lt;/span>%DEST% FILE&lt;span style="color:#f92672">=&lt;/span>%FILE% CWD&lt;span style="color:#f92672">=&lt;/span>%CWD%
md %DEST%
REM Used e here instead of x to keep structure flat
7z e -o&lt;span style="color:#e6db74">&amp;#34;%DEST%&amp;#34;&lt;/span> -y &lt;span style="color:#e6db74">&amp;#34;%FILE%&amp;#34;&lt;/span> tools.zip
cd &lt;span style="color:#e6db74">&amp;#34;%DEST%&amp;#34;&lt;/span>
7z x -y tools.zip
del tools.zip
&lt;span style="color:#66d9ef">for&lt;/span> /r %%x in &lt;span style="color:#f92672">(&lt;/span>*.pack&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#66d9ef">do&lt;/span> call :unpack2000 &lt;span style="color:#e6db74">&amp;#34;%%x&amp;#34;&lt;/span>
cd %CWD%
goto end
:unpack2000
%DEST%&lt;span style="color:#ae81ff">\b&lt;/span>in&lt;span style="color:#ae81ff">\u&lt;/span>npack200 -r %1 &lt;span style="color:#e6db74">&amp;#34;%~dpn1.jar&amp;#34;&lt;/span>
goto:eof
:end
echo Extracted %FILE% to %DEST%
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-shell" data-lang="shell">@echo off
REM This script will extract JDK tools from installers, without polluting Windows environment.
REM You need the pristine installers from Oracles website to extract all the data
setlocal
SET CWD&lt;span style="color:#f92672">=&lt;/span>%CD%
SET FILE&lt;span style="color:#f92672">=&lt;/span>%~f1
SET DEST&lt;span style="color:#f92672">=&lt;/span>%~dpn1
echo DEST&lt;span style="color:#f92672">=&lt;/span>%DEST% FILE&lt;span style="color:#f92672">=&lt;/span>%FILE% CWD&lt;span style="color:#f92672">=&lt;/span>%CWD%
md %DEST%
REM Used e here instead of x to keep structure flat
7z e -o&lt;span style="color:#e6db74">&amp;#34;%DEST%&amp;#34;&lt;/span> -y &lt;span style="color:#e6db74">&amp;#34;%FILE%&amp;#34;&lt;/span> .rsrc&lt;span style="color:#ae81ff">\J&lt;/span>AVA_CAB10&lt;span style="color:#ae81ff">\1&lt;/span>&lt;span style="color:#ae81ff">11&lt;/span>
cd &lt;span style="color:#e6db74">&amp;#34;%DEST%&amp;#34;&lt;/span>
extrac32.exe &lt;span style="color:#ae81ff">111&lt;/span>
del &lt;span style="color:#ae81ff">111&lt;/span>
7z x -y tools.zip
del tools.zip
&lt;span style="color:#66d9ef">for&lt;/span> /r %%x in &lt;span style="color:#f92672">(&lt;/span>*.pack&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#66d9ef">do&lt;/span> call :unpack2000 &lt;span style="color:#e6db74">&amp;#34;%%x&amp;#34;&lt;/span>
cd %CWD%
goto end
:unpack2000
%DEST%&lt;span style="color:#ae81ff">\b&lt;/span>in&lt;span style="color:#ae81ff">\u&lt;/span>npack200 -r %1 &lt;span style="color:#e6db74">&amp;#34;%~dpn1.jar&amp;#34;&lt;/span>
goto:eof
:end
echo Extracted %FILE% to %DEST%
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Google App Engine &amp; Maven - Works For Me</title><link>https://yogendra.github.io/2014/01/04/google-app-engine-maven-works-for-me/</link><pubDate>Sat, 04 Jan 2014 02:23:58 +0000</pubDate><guid>https://yogendra.github.io/2014/01/04/google-app-engine-maven-works-for-me/</guid><description>
&lt;p>Google has released its App Engine SDK on Maven central as a zip. But its very large and causes a &amp;ldquo;&lt;strong>Error 503 backend read error&lt;/strong>&amp;rdquo;.&lt;/p>
&lt;p>So, after a lot of head-banging I resolved this by adding SDK zip package (Yes! one from website) and a few jars (optional), to maven. Skip to end for the commands. You may have to modify these for a newer version.&lt;/p>
&lt;h1 id="tldr-skip-to-endgae_solution">&lt;a href="#gae_solution">tl;dr Skip to End&lt;/a>&lt;/h1>
&lt;h2 id="idea-to-accident">Idea to Accident&lt;/h2>
&lt;p>I created a simple maven project for some usual &amp;ldquo;help a friend&amp;rdquo; work. It worked well, so I thought &amp;ldquo;Why not publish sources on GitHub?&amp;rdquo;. After a few cycles, it looked ok, so I though I will push is to Google App Engine.&lt;/p>
&lt;p>And,  the nightmare began. I added following plugin and dependency in &lt;code>pom.xml&lt;/code>  based on official documentation.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-xml" data-lang="xml">&lt;span style="color:#f92672">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>com.google.appengine&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>appengine-api-1.0-sdk&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;version&amp;gt;&lt;/span>1.8.8&lt;span style="color:#f92672">&amp;lt;/version&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-xml" data-lang="xml">&lt;span style="color:#f92672">&amp;lt;plugin&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>com.google.appengine&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>appengine-maven-plugin&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;version&amp;gt;&lt;/span>1.8.8&lt;span style="color:#f92672">&amp;lt;/version&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;/plugin&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Just to be safe, I downloaded latest GAE SDK (1.8.8), Eclipse Plugin, etc. As per documentation, I tried to start dev server with following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-shell" data-lang="shell">mvn appengine:devserver_start
&lt;/code>&lt;/pre>&lt;/div>&lt;p>After a long list of downloads, build failed. Bang! The trouble started. Got this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-shell" data-lang="shell">&lt;span style="color:#f92672">[&lt;/span>INFO&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">&amp;lt;&amp;lt;&amp;lt;&lt;/span> appengine-maven-plugin:1.8.8:devserver_start &lt;span style="color:#f92672">(&lt;/span>default-cli&lt;span style="color:#f92672">)&lt;/span> @ java-servlet &lt;span style="color:#f92672">&amp;lt;&amp;lt;&amp;lt;&lt;/span>
&lt;span style="color:#f92672">[&lt;/span>INFO&lt;span style="color:#f92672">]&lt;/span>
&lt;span style="color:#f92672">[&lt;/span>INFO&lt;span style="color:#f92672">]&lt;/span> --- appengine-maven-plugin:1.8.8:devserver_start &lt;span style="color:#f92672">(&lt;/span>default-cli&lt;span style="color:#f92672">)&lt;/span> @ java-servlet ---
&lt;span style="color:#f92672">[&lt;/span>INFO&lt;span style="color:#f92672">]&lt;/span>
&lt;span style="color:#f92672">[&lt;/span>INFO&lt;span style="color:#f92672">]&lt;/span> Google App Engine Java SDK - Starting the Development Server
&lt;span style="color:#f92672">[&lt;/span>INFO&lt;span style="color:#f92672">]&lt;/span>
&lt;span style="color:#f92672">[&lt;/span>INFO&lt;span style="color:#f92672">]&lt;/span> Retrieving Google App Engine Java SDK from Maven
Downloading: http://repo.maven.apache.org/maven2/com/google/appengine/appengine-java-sdk/1.8.8/appengine-java-sdk-1.8.8.zip
&lt;span style="color:#f92672">[&lt;/span>INFO&lt;span style="color:#f92672">]&lt;/span> ------------------------------------------------------------------------
&lt;span style="color:#f92672">[&lt;/span>INFO&lt;span style="color:#f92672">]&lt;/span> BUILD FAILURE
&lt;span style="color:#f92672">[&lt;/span>INFO&lt;span style="color:#f92672">]&lt;/span> ------------------------------------------------------------------------
&lt;span style="color:#f92672">[&lt;/span>INFO&lt;span style="color:#f92672">]&lt;/span> Total time: 1:05.713s
&lt;span style="color:#f92672">[&lt;/span>INFO&lt;span style="color:#f92672">]&lt;/span> Finished at: Sat Jan &lt;span style="color:#ae81ff">04&lt;/span> 01:05:29 SGT &lt;span style="color:#ae81ff">2014&lt;/span>
&lt;span style="color:#f92672">[&lt;/span>INFO&lt;span style="color:#f92672">]&lt;/span> Final Memory: 17M/227M
&lt;span style="color:#f92672">[&lt;/span>INFO&lt;span style="color:#f92672">]&lt;/span> ------------------------------------------------------------------------
&lt;span style="color:#f92672">[&lt;/span>ERROR&lt;span style="color:#f92672">]&lt;/span> Failed to execute goal com.google.appengine:appengine-maven-plugin:1.8.8:devserver_start &lt;span style="color:#f92672">(&lt;/span>default-cli&lt;span style="color:#f92672">)&lt;/span> on project java-servlet: Could not resolve SDK artifact in Maven. Could not transfer artifact com.google.appengine:appengine-java-sdk:zip:1.8.8 from/to central &lt;span style="color:#f92672">(&lt;/span>http://repo.maven.apache.org/maven2&lt;span style="color:#f92672">)&lt;/span>: Failed to transfer file: http://repo.maven.apache.org/maven2/com/google/appengine/appengine-java-sdk/1.8.8/appengine-java-sdk-1.8.8.zip. Return code is: &lt;span style="color:#ae81ff">503&lt;/span> , ReasonPhrase:backend read error. -&amp;gt; &lt;span style="color:#f92672">[&lt;/span>Help 1&lt;span style="color:#f92672">]&lt;/span>
&lt;span style="color:#f92672">[&lt;/span>ERROR&lt;span style="color:#f92672">]&lt;/span>
&lt;span style="color:#f92672">[&lt;/span>ERROR&lt;span style="color:#f92672">]&lt;/span> To see the full stack trace of the errors, re-run Maven with the -e switch.
&lt;span style="color:#f92672">[&lt;/span>ERROR&lt;span style="color:#f92672">]&lt;/span> Re-run Maven using the -X switch to enable full debug logging.
&lt;span style="color:#f92672">[&lt;/span>ERROR&lt;span style="color:#f92672">]&lt;/span>
&lt;span style="color:#f92672">[&lt;/span>ERROR&lt;span style="color:#f92672">]&lt;/span> For more information about the errors and possible solutions, please read the following articles:
&lt;span style="color:#f92672">[&lt;/span>ERROR&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">[&lt;/span>Help 1&lt;span style="color:#f92672">]&lt;/span> http://cwiki.apache.org/confluence/display/MAVEN/MojoExecutionException
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This was unusual. So I tried again. Its maven central server not an &amp;ldquo;under-the-desk-server&amp;rdquo;. But same no change. I tried to download zip manually, just to be sure that artifact is indeed there. Damn it! I got same error, just a little more fancy looking though!&lt;/p>
&lt;p>&lt;img src="gae-sdk-mave-503-error.png" alt="type-banner" title="Google App Engine : Maven SDK Download Error">&lt;/p>
&lt;p>In directory index (&lt;a href="https://repo.maven.apache.org/maven2/com/google/appengine/appengine-java-sdk/1.8.8">here&lt;/a>), I saw that this file was a large (150+MB). So, now what? I did deploy the application after testing on Tomcat 7. I used simple appcfg.sh command.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-shell" data-lang="shell">mvn tomcat7:run
...
...
appcfg.sh update target/java-servlet
&lt;/code>&lt;/pre>&lt;/div>&lt;p>But, this was not a &amp;ldquo;cool&amp;rdquo; way. Maven is my project management tool, and I should use it as much as possible.&lt;/p>
&lt;h2 id="accident-to-revival">Accident to Revival&lt;/h2>
&lt;p>After googling, reading, googling, reading and googling, I stumbled upon an &lt;a href="https://shal.in/post/285908979/google-app-engine-and-maven">old blog&lt;/a> that added 1.2 version of SDK to maven using &lt;code>install:install-file&lt;/code> goal. Eureka! Why not do this with SDK zip? Thats it. Here are the commands&lt;/p>
&lt;h2 id="solution">Solution&lt;/h2>
&lt;p>Install SDK zip via following command.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-shell" data-lang="shell">mvn install:install-file &lt;span style="color:#ae81ff">\
&lt;/span>&lt;span style="color:#ae81ff">&lt;/span> -Dfile&lt;span style="color:#f92672">=&lt;/span>appengine-java-sdk-1.8.8.zip &lt;span style="color:#ae81ff">\
&lt;/span>&lt;span style="color:#ae81ff">&lt;/span> -DgroupId&lt;span style="color:#f92672">=&lt;/span>com.google.appengine &lt;span style="color:#ae81ff">\
&lt;/span>&lt;span style="color:#ae81ff">&lt;/span> -DartifactId&lt;span style="color:#f92672">=&lt;/span>appenging-java-sdk &lt;span style="color:#ae81ff">\
&lt;/span>&lt;span style="color:#ae81ff">&lt;/span> -Dversion&lt;span style="color:#f92672">=&lt;/span>1.8.8 &lt;span style="color:#ae81ff">\
&lt;/span>&lt;span style="color:#ae81ff">&lt;/span> -Dpackaging&lt;span style="color:#f92672">=&lt;/span>zip &lt;span style="color:#ae81ff">\
&lt;/span>&lt;span style="color:#ae81ff">&lt;/span> -DgeneratePom&lt;span style="color:#f92672">=&lt;/span>true
&lt;/code>&lt;/pre>&lt;/div>&lt;p>And, an optional JAR install can be done via:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-shell" data-lang="shell">mvn install:install-file &lt;span style="color:#ae81ff">\
&lt;/span>&lt;span style="color:#ae81ff">&lt;/span> -Dfile&lt;span style="color:#f92672">=&lt;/span>appengine-java-sdk-1.8.8/lib/appengine-tools-api.jar
-DgroupId&lt;span style="color:#f92672">=&lt;/span>com.google &lt;span style="color:#ae81ff">\
&lt;/span>&lt;span style="color:#ae81ff">&lt;/span> -DartifactId&lt;span style="color:#f92672">=&lt;/span>appengine-tools &lt;span style="color:#ae81ff">\
&lt;/span>&lt;span style="color:#ae81ff">&lt;/span> -Dversion&lt;span style="color:#f92672">=&lt;/span>1.8.8 &lt;span style="color:#ae81ff">\
&lt;/span>&lt;span style="color:#ae81ff">&lt;/span> -Dpackaging&lt;span style="color:#f92672">=&lt;/span>jar &lt;span style="color:#ae81ff">\
&lt;/span>&lt;span style="color:#ae81ff">&lt;/span> -DgeneratePom&lt;span style="color:#f92672">=&lt;/span>true
mvn install:install-file &lt;span style="color:#ae81ff">\
&lt;/span>&lt;span style="color:#ae81ff">&lt;/span> -Dfile&lt;span style="color:#f92672">=&lt;/span>appengine-java-sdk-1.8.8/lib/shared/appengine-local-runtime-shared.jar &lt;span style="color:#ae81ff">\
&lt;/span>&lt;span style="color:#ae81ff">&lt;/span> -DgroupId&lt;span style="color:#f92672">=&lt;/span>com.google &lt;span style="color:#ae81ff">\
&lt;/span>&lt;span style="color:#ae81ff">&lt;/span> -DartifactId&lt;span style="color:#f92672">=&lt;/span>appengine-local-runtime-shared &lt;span style="color:#ae81ff">\
&lt;/span>&lt;span style="color:#ae81ff">&lt;/span> -Dversion&lt;span style="color:#f92672">=&lt;/span>1.8.8 &lt;span style="color:#ae81ff">\
&lt;/span>&lt;span style="color:#ae81ff">&lt;/span> -Dpackaging&lt;span style="color:#f92672">=&lt;/span>jar &lt;span style="color:#ae81ff">\
&lt;/span>&lt;span style="color:#ae81ff">&lt;/span> -DgeneratePom&lt;span style="color:#f92672">=&lt;/span>true
mvn install:install-file &lt;span style="color:#ae81ff">\
&lt;/span>&lt;span style="color:#ae81ff">&lt;/span> -Dfile&lt;span style="color:#f92672">=&lt;/span>appengine-java-sdk-1.8.8/lib/user/appengine-api-1.0-sdk-1.8.8.jar &lt;span style="color:#ae81ff">\
&lt;/span>&lt;span style="color:#ae81ff">&lt;/span> -DgroupId&lt;span style="color:#f92672">=&lt;/span>com.google &lt;span style="color:#ae81ff">\
&lt;/span>&lt;span style="color:#ae81ff">&lt;/span> -DartifactId&lt;span style="color:#f92672">=&lt;/span>appengine-sdk-1.8.8-api &lt;span style="color:#ae81ff">\
&lt;/span>&lt;span style="color:#ae81ff">&lt;/span> -Dversion&lt;span style="color:#f92672">=&lt;/span>1.8.8 &lt;span style="color:#ae81ff">\
&lt;/span>&lt;span style="color:#ae81ff">&lt;/span> -Dpackaging&lt;span style="color:#f92672">=&lt;/span>jar &lt;span style="color:#ae81ff">\
&lt;/span>&lt;span style="color:#ae81ff">&lt;/span> -DgeneratePom&lt;span style="color:#f92672">=&lt;/span>true
mvn install:install-file &lt;span style="color:#ae81ff">\
&lt;/span>&lt;span style="color:#ae81ff">&lt;/span> -Dfile&lt;span style="color:#f92672">=&lt;/span>appengine-java-sdk-1.8.8/lib/user/orm/datanucleus-appengine-1.0.10.final.jar &lt;span style="color:#ae81ff">\
&lt;/span>&lt;span style="color:#ae81ff">&lt;/span> -DgroupId&lt;span style="color:#f92672">=&lt;/span>org.datanucleus &lt;span style="color:#ae81ff">\
&lt;/span>&lt;span style="color:#ae81ff">&lt;/span> -DartifactId&lt;span style="color:#f92672">=&lt;/span>datanucleus-appengine &lt;span style="color:#ae81ff">\
&lt;/span>&lt;span style="color:#ae81ff">&lt;/span> -Dversion&lt;span style="color:#f92672">=&lt;/span>1.0.10.final &lt;span style="color:#ae81ff">\
&lt;/span>&lt;span style="color:#ae81ff">&lt;/span> -Dpackaging&lt;span style="color:#f92672">=&lt;/span>jar &lt;span style="color:#ae81ff">\
&lt;/span>&lt;span style="color:#ae81ff">&lt;/span> -DgeneratePom&lt;span style="color:#f92672">=&lt;/span>true
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Project :   &lt;a href="https://github.com/yogendra/java-servlet">Source&lt;/a> | &lt;a href="https://java-servlet.yogendra.me">Live&lt;/a>&lt;/li>
&lt;li>Google App Engine: &lt;a href="https://developers.google.com/appengine/docs/java/tools/maven">Maven&lt;/a> | &lt;a href="https://developers.google.com/appengine/downloads#Google_App_Engine_SDK_for_Java">Dowloads&lt;/a>&lt;/li>
&lt;/ul></description></item></channel></rss>